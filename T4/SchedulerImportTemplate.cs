// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 11.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace OnSite.TemplateWizard.Classes
{
    using System;
    using System.Data;
    using System.Data.Objects;
    using System.Linq;
    using System.IO;
    using System.Collections.Generic;
    using System.Data.Objects.DataClasses;
    using System.Text.RegularExpressions;
    using System.Xml;
    using System.Xml.Linq;
    using System.Text;
    using OnSite.TemplateWizard.Classes;
    using OnSite.TemplateWizard.Models;
    using System.Data.EntityClient;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "11.0.0.0")]
    public partial class SchedulerImportTemplate : SchedulerImportTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            
            #line 2 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"

switch (OutputType) {
	case FileType.Page:
		GeneratePage(SiteVisit, SiteVisit.SiteVisitForms);
		break;
	case FileType.Code:
		GenerateCodeFile(SiteVisit, SiteVisit.SiteVisitForms);
		break;
	case FileType.Designer:
		GenerateDesignerFile(SiteVisit, SiteVisit.SiteVisitForms);
		break;
	default:
		break;
}

            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        #line 16 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"

    void GeneratePage(SiteVisit sitevisit, IEnumerable<SiteVisitForm> forms)
    {
		string sitevisitName = sitevisit.SiteVisitName.Replace(" ", "");
		var parentForm = SiteVisitDBHelper.GetParentForm(sitevisit);
		string table = sitevisit.SiteVisitName.Replace(" ", "") + "_" + parentForm.DBTableName;
        string pkey = sitevisit.SiteVisitName.Replace(" ", "") + "_" + parentForm.DBPrimaryKeyName;

        
        #line default
        #line hidden
        
        #line 23 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write("<%@ Page Title=\"");

        
        #line default
        #line hidden
        
        #line 23 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(sitevisit.SiteVisitName));

        
        #line default
        #line hidden
        
        #line 23 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write("\" Language=\"C#\" MasterPageFile=\"~/Site.master\" AutoEventWireup=\"true\" CodeBehind=" +
        "\"");

        
        #line default
        #line hidden
        
        #line 23 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(sitevisitName));

        
        #line default
        #line hidden
        
        #line 23 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write("Data.aspx.cs\" Inherits=\"OnSite.WebUI.ClientCode.SiteVisits.");

        
        #line default
        #line hidden
        
        #line 23 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(sitevisitName));

        
        #line default
        #line hidden
        
        #line 23 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write("Data\" %>\r\n<%@ Register Assembly=\"DevExpress.Web.v13.1, Version=13.1.4.0, Culture=" +
        "neutral, PublicKeyToken=b88d1754d700e49a\" Namespace=\"DevExpress.Web.ASPxGridView" +
        ".Export\" TagPrefix=\"dx\" %>\r\n<asp:Content ID=\"Content1\" ContentPlaceHolderID=\"Hea" +
        "dContent\" runat=\"server\">\r\n<script type=\"text/javascript\">\r\n    // <![CDATA[\r\n  " +
        "  function Uploader_OnUploadStart() {\r\n        btnUpload.SetEnabled(false);\r\n   " +
        " }\r\n    function Uploader_OnFileUploadComplete(args) {\r\n        grid.PerformCall" +
        "back();\r\n    }\r\n    function Uploader_OnFilesUploadComplete(args) {\r\n        Upd" +
        "ateUploadButton();\r\n    }\r\n    function UpdateUploadButton() {\r\n        btnUploa" +
        "d.SetEnabled(uploader.GetText(0) != \"\");\r\n    }\r\n    // ]]> \r\n</script>\r\n</asp:C" +
        "ontent>\r\n<asp:Content ID=\"Content2\" ContentPlaceHolderID=\"MainContent\" runat=\"se" +
        "rver\">\r\n\t<h2>Data Import/Export</h2>\r\n\t<table cellpadding=\"0\" cellspacing=\"0\" st" +
        "yle=\"background-color: #efefef; padding: 5px; width: 800px;\">\r\n        <tr>\r\n   " +
        "         <td colspan=\"2\">\r\n\t\t\t\t<p>\r\n\t\t\t\t\tTo import data, export to Csv first, th" +
        "en use the resulting file as an import template. Use the upload button to import" +
        " the template file.  Existing appointments will be updating, otherwise new appoi" +
        "ntments will be created.  Valid Contact ID\'s are required in order to import.\r\n\t" +
        "\t\t\t</p>\r\n            </td>\r\n        </tr>\t\t\r\n        <tr>\r\n            <td class" +
        "=\"caption\" style=\"padding-right: 5px;\">\r\n\t\t\t\t<p>1. Export</p>\r\n                <" +
        "dx:ASPxButton ID=\"btnCsvExport\" runat=\"server\" Text=\"Export to Csv\" UseSubmitBeh" +
        "avior=\"False\" />\r\n            </td>\r\n            <td>\r\n\t\t\t\t<p>2. Import</p>\r\n   " +
        "             <dx:ASPxUploadControl ID=\"uplFile\" runat=\"server\" ClientInstanceNam" +
        "e=\"uploader\" ShowProgressPanel=\"True\"\r\n                    NullText=\"Click here " +
        "to browse files...\" Size=\"35\" OnFileUploadComplete=\"uplImage_FileUploadComplete\"" +
        ">\r\n                    <ClientSideEvents FileUploadComplete=\"function(s, e) { Up" +
        "loader_OnFileUploadComplete(e); }\"\r\n                        FilesUploadComplete=" +
        "\"function(s, e) { Uploader_OnFilesUploadComplete(e); }\"\r\n                       " +
        " FileUploadStart=\"function(s, e) { Uploader_OnUploadStart(); }\"\r\n               " +
        "         TextChanged=\"function(s, e) { UpdateUploadButton(); }\"></ClientSideEven" +
        "ts>\r\n                    <ValidationSettings MaxFileSize=\"4194304\" AllowedFileEx" +
        "tensions=\".csv\">\r\n                    </ValidationSettings>\r\n                </d" +
        "x:ASPxUploadControl>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n          " +
        "  <td>\r\n            </td>\r\n            <td class=\"note\">\r\n                <dx:AS" +
        "PxLabel ID=\"lblAllowebMimeType\" runat=\"server\" Text=\"Allowed file types: csv\"\r\n " +
        "                   Font-Size=\"8pt\">\r\n                </dx:ASPxLabel>\r\n          " +
        "      <br />\r\n                <dx:ASPxLabel ID=\"lblMaxFileSize\" runat=\"server\" T" +
        "ext=\"Maximum file size: 4Mb\" Font-Size=\"8pt\">\r\n                </dx:ASPxLabel>\r\n" +
        "            </td>\r\n        </tr>\r\n        <tr>\r\n            <td colspan=\"2\" alig" +
        "n=\"center\" class=\"buttonCell\">\r\n                <dx:ASPxButton ID=\"btnUpload\" ru" +
        "nat=\"server\" AutoPostBack=\"False\" Text=\"Upload\" ClientInstanceName=\"btnUpload\"\r\n" +
        "                    Width=\"100px\" ClientEnabled=\"False\">\r\n                    <C" +
        "lientSideEvents Click=\"function(s, e) { uploader.Upload(); }\" />\r\n              " +
        "  </dx:ASPxButton>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    \r\n    <d" +
        "iv style=\"margin-top: 5px; margin-bottom: 5px;\">\r\n    <dx:ASPxGridView ID=\"grid\"" +
        " runat=\"server\" AutoGenerateColumns=\"False\" ClientInstanceName=\"grid\" \r\n        " +
        "DataSourceID=\"AppointmentsDataSource\" KeyFieldName=\"");

        
        #line default
        #line hidden
        
        #line 95 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(table));

        
        #line default
        #line hidden
        
        #line 95 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write("AppointmentID\">\r\n        <Columns>\r\n            <dx:GridViewDataTextColumn FieldN" +
        "ame=\"");

        
        #line default
        #line hidden
        
        #line 97 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(pkey));

        
        #line default
        #line hidden
        
        #line 97 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write("\" Caption=\"Contact ID\" ReadOnly=\"True\" Visible=\"true\"\r\n                VisibleInd" +
        "ex=\"0\">\r\n            </dx:GridViewDataTextColumn>\r\n            <dx:GridViewDataT" +
        "extColumn FieldName=\"SiteVisitAppointmentID\" Caption=\"Appointment ID\" ReadOnly=\"" +
        "True\" Visible=\"True\"\r\n                VisibleIndex=\"0\">\r\n            </dx:GridVi" +
        "ewDataTextColumn>\r\n            <dx:GridViewDataTextColumn FieldName=\"SiteVisitAp" +
        "pointment.SiteVisitID\" VisibleIndex=\"1\" Visible=\"false\">\r\n            </dx:GridV" +
        "iewDataTextColumn>\r\n            <dx:GridViewDataTextColumn FieldName=\"SiteVisitA" +
        "ppointment.ResourceID\" VisibleIndex=\"2\">\r\n            </dx:GridViewDataTextColum" +
        "n>\r\n            <dx:GridViewDataTextColumn FieldName=\"SiteVisitAppointment.Type\"" +
        " VisibleIndex=\"3\" Visible=\"false\">\r\n            </dx:GridViewDataTextColumn>\r\n  " +
        "          <dx:GridViewDataTextColumn FieldName=\"SiteVisitAppointment.Subject\" Vi" +
        "sibleIndex=\"4\">\r\n            </dx:GridViewDataTextColumn>\r\n            <dx:GridV" +
        "iewDataTextColumn FieldName=\"SiteVisitAppointment.Description\" VisibleIndex=\"5\">" +
        "\r\n            </dx:GridViewDataTextColumn>\r\n            <dx:GridViewDataTextColu" +
        "mn FieldName=\"SiteVisitAppointment.AppointmentLocation\" VisibleIndex=\"6\">\r\n     " +
        "       </dx:GridViewDataTextColumn>\r\n            <dx:GridViewDataTextColumn Fiel" +
        "dName=\"SiteVisitAppointment.AppointmentStartDate\" VisibleIndex=\"7\">\r\n           " +
        " </dx:GridViewDataTextColumn>\r\n            <dx:GridViewDataTextColumn FieldName=" +
        "\"SiteVisitAppointment.AppointmentEndDate\" VisibleIndex=\"8\">\r\n            </dx:Gr" +
        "idViewDataTextColumn>\r\n            <dx:GridViewDataTextColumn FieldName=\"SiteVis" +
        "itAppointment.Status\" VisibleIndex=\"10\" Visible=\"false\">\r\n            </dx:GridV" +
        "iewDataTextColumn>\r\n            <dx:GridViewDataTextColumn FieldName=\"SiteVisitA" +
        "ppointment.Label\" VisibleIndex=\"11\" Visible=\"false\">\r\n            </dx:GridViewD" +
        "ataTextColumn>\r\n        </Columns>\r\n\t\t<Settings ShowFilterRow=\"True\" />\r\n    </d" +
        "x:ASPxGridView>\r\n    </div>\r\n    <asp:EntityDataSource ID=\"AppointmentsDataSourc" +
        "e\" runat=\"server\" \r\n        ConnectionString=\"name=SiteVisitDataEntities\" \r\n    " +
        "    DefaultContainerName=\"SiteVisitDataEntities\" EnableFlattening=\"False\" \r\n    " +
        "    EntitySetName=\"");

        
        #line default
        #line hidden
        
        #line 130 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(table));

        
        #line default
        #line hidden
        
        #line 130 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write("Appointments\" Include=\"SiteVisitAppointment,AppointmentStatus\" Where=\"it.SiteVisi" +
        "tAppointment.SiteVisitID = ");

        
        #line default
        #line hidden
        
        #line 130 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(sitevisit.SiteVisitID));

        
        #line default
        #line hidden
        
        #line 130 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write("\">\r\n    </asp:EntityDataSource>\r\n    <dx:ASPxGridViewExporter ID=\"gridExporter\" r" +
        "unat=\"server\" GridViewID=\"grid\">\r\n    </dx:ASPxGridViewExporter>\r\n    \r\n</asp:Co" +
        "ntent>\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 137 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"

    }  

    void GenerateCodeFile(SiteVisit sitevisit, IEnumerable<SiteVisitForm> forms)
    {
		string sitevisitName = sitevisit.SiteVisitName.Replace(" ", "");
		var parentForm = SiteVisitDBHelper.GetParentForm(sitevisit);
		string table = sitevisit.SiteVisitName.Replace(" ", "") + "_" + parentForm.DBTableName;
        string pkey = sitevisit.SiteVisitName.Replace(" ", "") + "_" + parentForm.DBPrimaryKeyName;

        
        #line default
        #line hidden
        
        #line 146 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write(@"
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using DevExpress.Web.ASPxUploadControl;
using System.IO;
using CadmusUtility;
using System.Data;
using OnSite.WebUI.ClientCode.Models;
using OnSite.WebUI.Models;
using System.Web.Security;

namespace OnSite.WebUI.ClientCode.SiteVisits
{
    public partial class ");

        
        #line default
        #line hidden
        
        #line 164 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(sitevisitName));

        
        #line default
        #line hidden
        
        #line 164 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write(@"Data : System.Web.UI.Page
    {
        const string UploadDirectory = ""~/Uploads/"";
        private SiteVisitDataEntities dataCtx = new SiteVisitDataEntities();

        protected void Page_Load(object sender, EventArgs e)
        {
            btnCsvExport.Click += new EventHandler(btnCsvExport_Click);
            grid.CustomCallback += new DevExpress.Web.ASPxGridView.ASPxGridViewCustomCallbackEventHandler(grid_CustomCallback);
        }

        protected void grid_CustomCallback(object sender, DevExpress.Web.ASPxGridView.ASPxGridViewCustomCallbackEventArgs e)
        {
            grid.DataBind();
        }

        protected void btnCsvExport_Click(object sender, EventArgs e)
        {
			gridExporter.FileName = """);

        
        #line default
        #line hidden
        
        #line 182 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(sitevisitName));

        
        #line default
        #line hidden
        
        #line 182 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write("Appointments\";\r\n            gridExporter.WriteCsvToResponse();\r\n        }\r\n\r\n    " +
        "    protected void uplImage_FileUploadComplete(object sender, FileUploadComplete" +
        "EventArgs e)\r\n        {\r\n            e.CallbackData = SavePostedFile(e.UploadedF" +
        "ile);\r\n        }\r\n\r\n        protected string SavePostedFile(UploadedFile uploade" +
        "dFile)\r\n        {\r\n            if (!uploadedFile.IsValid)\r\n                retur" +
        "n string.Empty;\r\n\r\n            FileInfo fileInfo = new FileInfo(uploadedFile.Fil" +
        "eName);\r\n            string resFileName = MapPath(UploadDirectory) + fileInfo.Na" +
        "me;\r\n            uploadedFile.SaveAs(resFileName);\r\n            SaveAppointments" +
        "FromCsvFile(resFileName);           \r\n\r\n            string fileLabel = fileInfo." +
        "Name;\r\n            string fileLength = uploadedFile.ContentLength / 1024 + \"K\";\r" +
        "\n            return string.Format(\"{0} ({1})|{2}\", fileLabel, fileLength, fileIn" +
        "fo.Name);\r\n        }\r\n\r\n        protected void SaveAppointmentsFromCsvFile(strin" +
        "g filename)\r\n        {\r\n            CsvReader reader = new CsvReader();\r\n       " +
        "     DataTable dt = reader.GetDataTable(filename);\r\n            foreach (DataRow" +
        " dr in dt.Rows)\r\n            {\r\n                try\r\n                {\r\n        " +
        "            if (dr[\"Contact ID\"] == null)\r\n                        throw new Exc" +
        "eption(\"No contact ID was supplied\");\r\n                    //look up existing re" +
        "cord\r\n                    int contactID = (int)dr[\"Contact ID\"];\r\n\r\n            " +
        "        if (!string.IsNullOrEmpty(dr[\"Appointment ID\"].ToString()))\r\n           " +
        "         {\r\n                        //existing appointment\r\n                    " +
        "    int appointmentID = (int)dr[\"Appointment ID\"];\r\n                        var " +
        "appointment = (from a in dataCtx.");

        
        #line default
        #line hidden
        
        #line 223 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(table));

        
        #line default
        #line hidden
        
        #line 223 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write("Appointments\r\n                                           where a.");

        
        #line default
        #line hidden
        
        #line 224 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(pkey));

        
        #line default
        #line hidden
        
        #line 224 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write(@" == contactID && a.SiteVisitAppointmentID == appointmentID
                                           select a).FirstOrDefault();
                        var appt = appointment.SiteVisitAppointment;
                        appt.ResourceID = (string)dr[""Resource ID""];
                        appt.Subject = dr[""Subject""] != System.DBNull.Value ? (string)dr[""Subject""] : null;
                        appt.Description = dr[""Description""] != System.DBNull.Value ? (string)dr[""Description""] : null;
                        appt.AppointmentLocation = (string)dr[""Appointment Location""];
                        appt.AppointmentStartDate = (DateTime)dr[""Appointment Start Date""];
                        appt.AppointmentEndDate = (DateTime)dr[""Appointment End Date""];
                        appt.LastModifiedDate = DateTime.Now;
                        dataCtx.SaveChanges();
                    }
                    else
                    {
                        //new appointment
                        //get existing contact
                        var contact = (from c in dataCtx.");

        
        #line default
        #line hidden
        
        #line 240 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(table));

        
        #line default
        #line hidden
        
        #line 240 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write("\r\n                                       where c.");

        
        #line default
        #line hidden
        
        #line 241 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(pkey));

        
        #line default
        #line hidden
        
        #line 241 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write(@" == contactID
                                       select c).FirstOrDefault();
                        if (contact == null)
                            throw new Exception(""Contact not found in contact table"");
                        var appt = new SiteVisitAppointment();
                        appt.SiteVisitID = ");

        
        #line default
        #line hidden
        
        #line 246 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(sitevisit.SiteVisitID));

        
        #line default
        #line hidden
        
        #line 246 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write(@";
                        appt.ResourceID = (string)dr[""Resource ID""];
                        appt.Subject = dr[""Subject""] != System.DBNull.Value ? (string)dr[""Subject""] : null;
                        appt.Description = dr[""Description""] != System.DBNull.Value ? (string)dr[""Description""] : null; 
                        appt.AppointmentLocation = (string)dr[""Appointment Location""];
                        appt.AppointmentStartDate = (DateTime)dr[""Appointment Start Date""];
                        appt.AppointmentEndDate = (DateTime)dr[""Appointment End Date""];
                        appt.Status = 3;
                        appt.Label = 6;
                        appt.CreateDate = DateTime.Now;
                        appt.LastModifiedDate = DateTime.Now;
                        dataCtx.SiteVisitAppointments.AddObject(appt);
                        dataCtx.SaveChanges();

                        var contactApt = new ");

        
        #line default
        #line hidden
        
        #line 260 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(table));

        
        #line default
        #line hidden
        
        #line 260 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write("Appointments();\r\n                        contactApt.SiteVisitAppointmentID = appt" +
        ".SiteVisitAppointmentID;\r\n                        contactApt.");

        
        #line default
        #line hidden
        
        #line 262 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(pkey));

        
        #line default
        #line hidden
        
        #line 262 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write(@" = contactID;
                        contactApt.CreateDate = DateTime.Now;
                        contactApt.CreateUser = Membership.GetUser().UserName;
                        contactApt.ModifiedDate = DateTime.Now;
                        contactApt.ModifiedUser = Membership.GetUser().UserName;
                        dataCtx.");

        
        #line default
        #line hidden
        
        #line 267 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(table));

        
        #line default
        #line hidden
        
        #line 267 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write(@"Appointments.AddObject(contactApt);

                        dataCtx.SaveChanges();
                    }
                }
                catch (Exception ex)
                {
                    throw ex;
                }
            }
        }
    }
}
");

        
        #line default
        #line hidden
        
        #line 280 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"

    }
	
	void GenerateDesignerFile(SiteVisit sitevisit, IEnumerable<SiteVisitForm> forms)
	{
		string sitevisitName = sitevisit.SiteVisitName.Replace(" ", "");

        
        #line default
        #line hidden
        
        #line 286 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write(@"//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated. 
// </auto-generated>
//------------------------------------------------------------------------------

namespace OnSite.WebUI.ClientCode.SiteVisits {
    
    
    public partial class ");

        
        #line default
        #line hidden
        
        #line 299 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(sitevisitName));

        
        #line default
        #line hidden
        
        #line 299 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"
this.Write("Data {\r\n\r\n/// <summary>\r\n        /// btnCsvExport control.\r\n        /// </summary" +
        ">\r\n        /// <remarks>\r\n        /// Auto-generated field.\r\n        /// To modi" +
        "fy move field declaration from designer file to code-behind file.\r\n        /// <" +
        "/remarks>\r\n        protected global::DevExpress.Web.ASPxEditors.ASPxButton btnCs" +
        "vExport;\r\n        \r\n        /// <summary>\r\n        /// grid control.\r\n        //" +
        "/ </summary>\r\n        /// <remarks>\r\n        /// Auto-generated field.\r\n        " +
        "/// To modify move field declaration from designer file to code-behind file.\r\n  " +
        "      /// </remarks>\r\n        protected global::DevExpress.Web.ASPxGridView.ASPx" +
        "GridView grid;\r\n        \r\n        /// <summary>\r\n        /// AppointmentsDataSou" +
        "rce control.\r\n        /// </summary>\r\n        /// <remarks>\r\n        /// Auto-ge" +
        "nerated field.\r\n        /// To modify move field declaration from designer file " +
        "to code-behind file.\r\n        /// </remarks>\r\n        protected global::System.W" +
        "eb.UI.WebControls.EntityDataSource AppointmentsDataSource;\r\n        \r\n        //" +
        "/ <summary>\r\n        /// gridExporter control.\r\n        /// </summary>\r\n        " +
        "/// <remarks>\r\n        /// Auto-generated field.\r\n        /// To modify move fie" +
        "ld declaration from designer file to code-behind file.\r\n        /// </remarks>\r\n" +
        "        protected global::DevExpress.Web.ASPxGridView.Export.ASPxGridViewExporte" +
        "r gridExporter;\r\n        \r\n        /// <summary>\r\n        /// lblSelectImage con" +
        "trol.\r\n        /// </summary>\r\n        /// <remarks>\r\n        /// Auto-generated" +
        " field.\r\n        /// To modify move field declaration from designer file to code" +
        "-behind file.\r\n        /// </remarks>\r\n        protected global::DevExpress.Web." +
        "ASPxEditors.ASPxLabel lblSelectImage;\r\n        \r\n        /// <summary>\r\n        " +
        "/// uplFile control.\r\n        /// </summary>\r\n        /// <remarks>\r\n        ///" +
        " Auto-generated field.\r\n        /// To modify move field declaration from design" +
        "er file to code-behind file.\r\n        /// </remarks>\r\n        protected global::" +
        "DevExpress.Web.ASPxUploadControl.ASPxUploadControl uplFile;\r\n        \r\n        /" +
        "// <summary>\r\n        /// lblAllowebMimeType control.\r\n        /// </summary>\r\n " +
        "       /// <remarks>\r\n        /// Auto-generated field.\r\n        /// To modify m" +
        "ove field declaration from designer file to code-behind file.\r\n        /// </rem" +
        "arks>\r\n        protected global::DevExpress.Web.ASPxEditors.ASPxLabel lblAlloweb" +
        "MimeType;\r\n        \r\n        /// <summary>\r\n        /// lblMaxFileSize control.\r" +
        "\n        /// </summary>\r\n        /// <remarks>\r\n        /// Auto-generated field" +
        ".\r\n        /// To modify move field declaration from designer file to code-behin" +
        "d file.\r\n        /// </remarks>\r\n        protected global::DevExpress.Web.ASPxEd" +
        "itors.ASPxLabel lblMaxFileSize;\r\n        \r\n        /// <summary>\r\n        /// bt" +
        "nUpload control.\r\n        /// </summary>\r\n        /// <remarks>\r\n        /// Aut" +
        "o-generated field.\r\n        /// To modify move field declaration from designer f" +
        "ile to code-behind file.\r\n        /// </remarks>\r\n        protected global::DevE" +
        "xpress.Web.ASPxEditors.ASPxButton btnUpload;\r\n\r\n\t}\r\n}\r\n");

        
        #line default
        #line hidden
        
        #line 384 "C:\Users\ryan.kilkenny\Documents\Workspace\On-Site\Admin\OnSite.TemplateWizard\T4\SchedulerImportTemplate.tt"

	}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "11.0.0.0")]
    public class SchedulerImportTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
