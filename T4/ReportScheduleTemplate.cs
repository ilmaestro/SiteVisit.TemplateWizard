// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 10.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace OnSite.TemplateWizard.Classes
{
    using System;
    using System.Data;
    using System.Data.Objects;
    using System.Linq;
    using System.IO;
    using System.Collections.Generic;
    using System.Data.Objects.DataClasses;
    using System.Text.RegularExpressions;
    using System.Xml;
    using System.Xml.Linq;
    using System.Text;
    using OnSite.TemplateWizard.Classes;
    using OnSite.TemplateWizard.Models;
    using System.Data.EntityClient;
    
    
    #line 1 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "10.0.0.0")]
    public partial class ReportScheduleTemplate : ReportScheduleTemplateBase
    {
        public virtual string TransformText()
        {
            
            #line 2 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"

switch (OutputType) {
	case FileType.Page:
		GeneratePage(SiteVisit, SiteVisit.SiteVisitForms);
		break;
	case FileType.Code:
		GenerateCodeFile(SiteVisit, SiteVisit.SiteVisitForms);
		break;
	case FileType.Designer:
		GenerateDesignerFile(SiteVisit, SiteVisit.SiteVisitForms);
		break;
	default:
		break;
}

            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        #line 16 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"

    void GeneratePage(SiteVisit sitevisit, IEnumerable<SiteVisitForm> forms)
    {
		string sitevisitName = sitevisit.SiteVisitName.Replace(" ", "");
		var parentForm = SiteVisitDBHelper.GetParentForm(sitevisit);
		string table = sitevisit.SiteVisitName.Replace(" ", "") + "_" + parentForm.DBTableName;
        string pkey = sitevisit.SiteVisitName.Replace(" ", "") + "_" + parentForm.DBPrimaryKeyName;

        
        #line default
        #line hidden
        
        #line 23 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write("<%@ Page Title=\"");

        
        #line default
        #line hidden
        
        #line 24 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(sitevisit.SiteVisitName));

        
        #line default
        #line hidden
        
        #line 24 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write("\" Language=\"C#\" MasterPageFile=\"~/Site.master\" AutoEventWireup=\"true\" CodeBehind=" +
        "\"");

        
        #line default
        #line hidden
        
        #line 24 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(sitevisitName));

        
        #line default
        #line hidden
        
        #line 24 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write("Schedule.aspx.cs\" Inherits=\"OnSite.WebUI.Reports.");

        
        #line default
        #line hidden
        
        #line 24 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(sitevisitName));

        
        #line default
        #line hidden
        
        #line 24 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write(@"Schedule"" %>
<%@ Register Assembly=""DevExpress.XtraReports.v12.1.Web, Version=12.1.4.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a""
    Namespace=""DevExpress.XtraReports.Web"" TagPrefix=""dx"" %>
<asp:Content ID=""Content1"" ContentPlaceHolderID=""HeadContent"" runat=""server"">
</asp:Content>
<asp:Content ID=""Content2"" ContentPlaceHolderID=""MainContent"" runat=""server"">
    <h2>");

        
        #line default
        #line hidden
        
        #line 30 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(sitevisitName));

        
        #line default
        #line hidden
        
        #line 30 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write(" Schedule</h2>\r\n    <dx:ASPxRoundPanel ID=\"ASPxRoundPanel1\" runat=\"server\" Width=" +
        "\"100%\" HeaderText=\"Daily Style Options\">\r\n        <PanelCollection>\r\n           " +
        " <dx:PanelContent ID=\"Panelcontent1\" runat=\"server\">\r\n                <table cel" +
        "lpadding=\"5\" cellspacing=\"0\" width=\"100%\">\r\n                    <tr align=\"left\"" +
        ">\r\n                        <td align=\"left\" style=\"white-space: nowrap; padding-" +
        "right: 0px\">\r\n                            <dx:ASPxLabel ID=\"lblResourceCount\" ru" +
        "nat=\"server\" Text=\"Resource Count:\" AssociatedControlID=\"cbResourceCount\" />\r\n  " +
        "                      </td>\r\n                        <td>\r\n                     " +
        "       <dx:ASPxComboBox ID=\"cbResourceCount\" runat=\"server\" ValueType=\"System.In" +
        "t32\" SelectedIndex=\"3\"\r\n                                Width=\"50px\">\r\n         " +
        "                       <ClientSideEvents SelectedIndexChanged=\"function(s, e) { " +
        "ClientReportViewer.Refresh(); }\" />\r\n                                <Items>\r\n  " +
        "                                  <dx:ListEditItem Text=\"1\" Value=\"1\"></dx:ListE" +
        "ditItem>\r\n                                    <dx:ListEditItem Text=\"2\" Value=\"2" +
        "\"></dx:ListEditItem>\r\n                                    <dx:ListEditItem Text=" +
        "\"3\" Value=\"3\"></dx:ListEditItem>\r\n                                    <dx:ListEd" +
        "itItem Text=\"4\" Value=\"4\"></dx:ListEditItem>\r\n                                  " +
        "  <dx:ListEditItem Text=\"5\" Value=\"5\"></dx:ListEditItem>\r\n                      " +
        "              <dx:ListEditItem Text=\"6\" Value=\"6\"></dx:ListEditItem>\r\n          " +
        "                      </Items>\r\n                            </dx:ASPxComboBox>\r\n" +
        "                        </td>\r\n                        <td>\r\n                   " +
        "         <dx:ASPxLabel ID=\"lblStart\" runat=\"server\" Text=\"Start:\" AssociatedCont" +
        "rolID=\"edtStart\" />\r\n                        </td>\r\n                        <td>" +
        "\r\n                            <dx:ASPxDateEdit ID=\"edtStart\" runat=\"server\" Widt" +
        "h=\"120px\" ClientInstanceName=\"clientEdtStart\">\r\n                                " +
        "<ClientSideEvents DateChanged=\"function(s, e) {ClientReportViewer.Refresh(); }\">" +
        "\r\n                                </ClientSideEvents>\r\n                         " +
        "   </dx:ASPxDateEdit>\r\n                        </td>\r\n                        <t" +
        "d>\r\n                            <dx:ASPxLabel ID=\"lblTimeScale\" runat=\"server\" T" +
        "ext=\"Time scale:\" AssociatedControlID=\"cbTimeScale\" />\r\n                        " +
        "</td>\r\n                        <td>\r\n                            <dx:ASPxComboBo" +
        "x ID=\"cbTimeScale\" runat=\"server\" ValueType=\"System.Int32\" SelectedIndex=\"1\"\r\n  " +
        "                              Width=\"120px\">\r\n                                <I" +
        "tems>\r\n                                    <dx:ListEditItem Text=\"Year/Month\" Va" +
        "lue=\"0\"></dx:ListEditItem>\r\n                                    <dx:ListEditItem" +
        " Text=\"Month/Week\" Value=\"1\"></dx:ListEditItem>\r\n                               " +
        "     <dx:ListEditItem Text=\"Week/Day\" Value=\"2\"></dx:ListEditItem>\r\n            " +
        "                    </Items>\r\n                                <ClientSideEvents " +
        "SelectedIndexChanged=\"function(s, e) { ClientReportViewer.Refresh(); }\" />\r\n    " +
        "                        </dx:ASPxComboBox>\r\n                        </td>\r\n     " +
        "               </tr>\r\n                    <tr align=\"left\">\r\n                   " +
        "     <td align=\"left\" style=\"white-space: nowrap; padding-right: 0px\">\r\n        " +
        "                    <dx:ASPxLabel ID=\"lblIntervalCount\" runat=\"server\" Text=\"Int" +
        "erval Count:\" AssociatedControlID=\"cbIntervalCount\" />\r\n                        " +
        "</td>\r\n                        <td>\r\n                            <dx:ASPxComboBo" +
        "x ID=\"cbIntervalCount\" runat=\"server\" ValueType=\"System.Int32\" SelectedIndex=\"3\"" +
        "\r\n                                Width=\"50px\">\r\n                               " +
        " <ClientSideEvents SelectedIndexChanged=\"function(s, e) { ClientReportViewer.Ref" +
        "resh(); }\" />\r\n                                <Items>\r\n                        " +
        "            <dx:ListEditItem Text=\"1\" Value=\"1\"></dx:ListEditItem>\r\n            " +
        "                        <dx:ListEditItem Text=\"2\" Value=\"2\"></dx:ListEditItem>\r\n" +
        "                                    <dx:ListEditItem Text=\"3\" Value=\"3\"></dx:Lis" +
        "tEditItem>\r\n                                    <dx:ListEditItem Text=\"4\" Value=" +
        "\"4\"></dx:ListEditItem>\r\n                                    <dx:ListEditItem Tex" +
        "t=\"5\" Value=\"5\"></dx:ListEditItem>\r\n                                    <dx:List" +
        "EditItem Text=\"6\" Value=\"6\"></dx:ListEditItem>\r\n                                " +
        "    <dx:ListEditItem Text=\"7\" Value=\"7\"></dx:ListEditItem>\r\n                    " +
        "            </Items>\r\n                            </dx:ASPxComboBox>\r\n          " +
        "              </td>\r\n                        <td>\r\n                            <" +
        "dx:ASPxLabel ID=\"lblEnd\" runat=\"server\" Text=\"End:\" AssociatedControlID=\"edtEnd\"" +
        " />\r\n                        </td>\r\n                        <td colspan=\"3\" alig" +
        "n=\"left\">\r\n                            <dx:ASPxDateEdit ID=\"edtEnd\" runat=\"serve" +
        "r\" Width=\"120px\" ClientInstanceName=\"clientEdtEnd\">\r\n                           " +
        "     <ClientSideEvents DateChanged=\"function(s, e) { ClientReportViewer.Refresh(" +
        "); }\">\r\n                                </ClientSideEvents>\r\n                   " +
        "         </dx:ASPxDateEdit>\r\n                        </td>\r\n                    " +
        "</tr>\r\n                </table>\r\n            </dx:PanelContent>\r\n        </Panel" +
        "Collection>\r\n    </dx:ASPxRoundPanel>\r\n    <br />\r\n    <dx:ReportToolbar ID=\"Rep" +
        "ortToolbar1\" runat=\"server\" ReportViewer=\"<%# ReportViewer %>\"\r\n        ShowDefa" +
        "ultButtons=\"False\" Width=\"100%\">\r\n        <Items>\r\n            <dx:ReportToolbar" +
        "Button ItemKind=\"Search\" Enabled=\"false\" />\r\n            <dx:ReportToolbarSepara" +
        "tor />\r\n            <dx:ReportToolbarButton ItemKind=\"PrintReport\" ToolTip=\"Prin" +
        "t the report\" />\r\n            <dx:ReportToolbarButton ItemKind=\"PrintPage\" ToolT" +
        "ip=\"Print the current page\" />\r\n            <dx:ReportToolbarSeparator />\r\n     " +
        "       <dx:ReportToolbarButton ItemKind=\"FirstPage\" ToolTip=\"First Page\" />\r\n   " +
        "         <dx:ReportToolbarButton ItemKind=\"PreviousPage\" ToolTip=\"Previous Page\"" +
        " />\r\n            <dx:ReportToolbarLabel Text=\"Page\" />\r\n            <dx:ReportTo" +
        "olbarComboBox ItemKind=\"PageNumber\" Width=\"65px\">\r\n            </dx:ReportToolba" +
        "rComboBox>\r\n            <dx:ReportToolbarLabel Text=\"of\" />\r\n            <dx:Rep" +
        "ortToolbarTextBox IsReadOnly=\"True\" ItemKind=\"PageCount\" />\r\n            <dx:Rep" +
        "ortToolbarButton ItemKind=\"NextPage\" ToolTip=\"Next Page\" />\r\n            <dx:Rep" +
        "ortToolbarButton ItemKind=\"LastPage\" ToolTip=\"Last Page\" />\r\n            <dx:Rep" +
        "ortToolbarSeparator />\r\n            <dx:ReportToolbarButton ItemKind=\"SaveToDisk" +
        "\" ToolTip=\"Export a report and save it to the disk\" />\r\n            <dx:ReportTo" +
        "olbarButton ItemKind=\"SaveToWindow\" ToolTip=\"Export a report and show it in a ne" +
        "w window\" />\r\n            <dx:ReportToolbarComboBox ItemKind=\"SaveFormat\" Width=" +
        "\"70px\">\r\n                <Elements>\r\n                    <dx:ListElement Text=\"P" +
        "df\" Value=\"pdf\" />\r\n                    <dx:ListElement Text=\"Mht\" Value=\"mht\" /" +
        ">\r\n                    <dx:ListElement Text=\"Image\" Value=\"png\" />\r\n            " +
        "    </Elements>\r\n            </dx:ReportToolbarComboBox>\r\n        </Items>\r\n    " +
        "    <Styles>\r\n            <LabelStyle>\r\n                <Margins MarginLeft=\"3px" +
        "\" MarginRight=\"3px\" />\r\n            </LabelStyle>\r\n        </Styles>\r\n    </dx:R" +
        "eportToolbar>\r\n    <dx:ReportViewer ID=\"ReportViewer\" runat=\"server\" ClientInsta" +
        "nceName=\"ClientReportViewer\">\r\n    </dx:ReportViewer>\r\n</asp:Content>\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 149 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"

    }  

	private string GenerateGridViewColumns(SiteVisitForm form)
	{
		foreach(SiteVisitFormField field in SiteVisitDBHelper.GetSiteVisitSearchableFields(form)) {

        
        #line default
        #line hidden
        
        #line 155 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write("\t\t\t\t\t\t\t\t\t\t<dx:GridViewDataTextColumn FieldName=\"");

        
        #line default
        #line hidden
        
        #line 155 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(field.FieldName));

        
        #line default
        #line hidden
        
        #line 155 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write("\" Caption=\"");

        
        #line default
        #line hidden
        
        #line 155 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(field.FieldLabel));

        
        #line default
        #line hidden
        
        #line 155 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write("\"\r\n\t\t\t\t\t\t\t\t\t\t\tReadOnly=\"True\" VisibleIndex=\"");

        
        #line default
        #line hidden
        
        #line 156 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(field.FieldTabIndex));

        
        #line default
        #line hidden
        
        #line 156 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write("\">\r\n\t\t\t\t\t\t\t\t\t\t</dx:GridViewDataTextColumn>\r\n");

        
        #line default
        #line hidden
        
        #line 158 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
 
		}
		return "";
	}
	
	private string GenerateNavBarItems(IEnumerable<SiteVisitForm> forms)
	{
		var query = from f in forms
					where f.SiteVisitParentFormID != null
					select f;
		foreach(SiteVisitForm form in query) {
			string visible = form.SiteVisitParentFormID == null ? "True" : "False";

        
        #line default
        #line hidden
        
        #line 170 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write("\t\t\t\t                <dx:NavBarItem Text=\"");

        
        #line default
        #line hidden
        
        #line 170 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(form.UIDisplayName));

        
        #line default
        #line hidden
        
        #line 170 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write("\" Name=\"");

        
        #line default
        #line hidden
        
        #line 170 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(form.DBTableName));

        
        #line default
        #line hidden
        
        #line 170 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write("\" Image-Url=\"~/Images/application_form.png\">                        \r\n           " +
        "                     </dx:NavBarItem>\r\n");

        
        #line default
        #line hidden
        
        #line 172 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
 
		}
		return "";
	}

	private string GenerateUserControls(IEnumerable<SiteVisitForm> forms)
	{
		foreach(SiteVisitForm form in forms) {
			string visible = form.SiteVisitParentFormID == null ? "True" : "False";

        
        #line default
        #line hidden
        
        #line 181 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write("\t\t\t\t\t\t<uc:");

        
        #line default
        #line hidden
        
        #line 181 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(form.DBTableName));

        
        #line default
        #line hidden
        
        #line 181 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write(" ID=\"uc");

        
        #line default
        #line hidden
        
        #line 181 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(form.DBTableName));

        
        #line default
        #line hidden
        
        #line 181 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write("\" runat=\"server\" Visible=\"");

        
        #line default
        #line hidden
        
        #line 181 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(visible));

        
        #line default
        #line hidden
        
        #line 181 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write("\" />\r\n");

        
        #line default
        #line hidden
        
        #line 182 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
 
		}
		return "";
	}

    void GenerateCodeFile(SiteVisit sitevisit, IEnumerable<SiteVisitForm> forms)
    {
		string sitevisitName = sitevisit.SiteVisitName.Replace(" ", "");
		string siteVisitID = sitevisit.SiteVisitID.ToString();
		var parentForm = SiteVisitDBHelper.GetParentForm(sitevisit);
		string table = sitevisit.SiteVisitName.Replace(" ", "") + "_" + parentForm.DBTableName;
        string pkey = sitevisit.SiteVisitName.Replace(" ", "") + "_" + parentForm.DBPrimaryKeyName;

        
        #line default
        #line hidden
        
        #line 194 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write(@"using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using DevExpress.XtraScheduler;
using DevExpress.XtraScheduler.Reporting;
using OnSite.WebUI.Classes;
using OnSite.WebUI.Models;

namespace OnSite.WebUI.Reports
{
    public partial class ");

        
        #line default
        #line hidden
        
        #line 207 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(sitevisitName));

        
        #line default
        #line hidden
        
        #line 207 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write("Schedule : System.Web.UI.Page\r\n    {\r\n        private SiteVisitDataEntities apptC" +
        "tx = new SiteVisitDataEntities();\r\n        private DateTime Start { get { return" +
        " (DateTime)edtStart.Value; } }\r\n        private DateTime End { get { return (Dat" +
        "eTime)edtEnd.Value; } }\r\n\r\n        protected void Page_Load(object sender, Event" +
        "Args e)\r\n        {\r\n            TimelineStyleReport report = new TimelineStyleRe" +
        "port();            \r\n            report.SchedulerAdapter = GetSchedulerAdapter()" +
        ";\r\n            ReportViewer.Report = report;\r\n            InitializeControlValue" +
        "s();\r\n            ApplyOptions(report);\r\n        }\r\n\r\n        protected void Ini" +
        "tializeControlValues()\r\n        {\r\n            if (!IsPostBack)\r\n            {\r\n" +
        "                this.edtStart.Value = DateTime.Now.AddDays(-DateTime.Now.Day);\r\n" +
        "                this.edtEnd.Value = DateTime.Now.AddDays(-DateTime.Now.Day).AddM" +
        "onths(1);\r\n            }\r\n        }\r\n\r\n        protected void ApplyOptions(Timel" +
        "ineStyleReport report)\r\n        {\r\n            report.SchedulerAdapter.TimeInter" +
        "val = new TimeInterval(Start, End);\r\n            report.TimeIntervalCount = (int" +
        ")cbIntervalCount.Value;\r\n            report.ResourceCount = (int)cbResourceCount" +
        ".Value;\r\n\r\n            switch ((int)cbTimeScale.Value)\r\n            {\r\n         " +
        "       case 0:\r\n                    {\r\n                        report.FirstLevel" +
        "TimeScale = \"Year\";\r\n                        report.SecondLevelTimeScale = \"Mont" +
        "h\";\r\n                        break;\r\n                    }\r\n                case" +
        " 1:\r\n                    {\r\n                        report.FirstLevelTimeScale =" +
        " \"Month\";\r\n                        report.SecondLevelTimeScale = \"Week\";\r\n      " +
        "                  break;\r\n                    }\r\n                case 2:\r\n      " +
        "              {\r\n                        report.FirstLevelTimeScale = \"Week\";\r\n " +
        "                       report.SecondLevelTimeScale = \"Day\";\r\n                   " +
        "     break;\r\n                    }\r\n            }\r\n        }\r\n\r\n\r\n        protec" +
        "ted SchedulerStoragePrintAdapter GetSchedulerAdapter()\r\n        {\r\n            S" +
        "chedulerStorage schedulerStorage = new SchedulerStorage();\r\n            Resource" +
        "MappingInfo resourceMappings = schedulerStorage.Resources.Mappings;\r\n           " +
        " AppointmentMappingInfo appointmentMappings = schedulerStorage.Appointments.Mapp" +
        "ings;\r\n\r\n            resourceMappings.Id = \"ResourceID\";\r\n            resourceMa" +
        "ppings.Caption = \"ResourceName\";\r\n\r\n            appointmentMappings.AppointmentI" +
        "d = \"SiteVisitAppointmentID\";\r\n            appointmentMappings.Start = \"Appointm" +
        "entStartDate\";\r\n            appointmentMappings.End = \"AppointmentEndDate\";\r\n   " +
        "         appointmentMappings.Subject = \"Subject\";\r\n            appointmentMappin" +
        "gs.Description = \"Description\";\r\n            appointmentMappings.Location = \"App" +
        "ointmentLocation\";\r\n            appointmentMappings.Label = \"Label\";\r\n          " +
        "  appointmentMappings.Status = \"Status\";\r\n            appointmentMappings.AllDay" +
        " = \"AppointmentAllDay\";\r\n            appointmentMappings.ReminderInfo = \"Reminde" +
        "rInfo\";\r\n            appointmentMappings.RecurrenceInfo = \"RecurrenceInfo\";\r\n   " +
        "         appointmentMappings.Type = \"Type\";\r\n            appointmentMappings.Res" +
        "ourceId = \"ResourceID\";\r\n\r\n            schedulerStorage.Appointments.ResourceSha" +
        "ring = false;\r\n\r\n            schedulerStorage.Resources.DataSource = MembershipH" +
        "elper.GetResources();\r\n\r\n            schedulerStorage.Appointments.DataSource = " +
        "(from a in apptCtx.SiteVisitAppointments\r\n                                      " +
        "                  select a);                                                    " +
        "        \r\n            SchedulerStoragePrintAdapter adapter = new SchedulerStorag" +
        "ePrintAdapter(schedulerStorage);\r\n            //adapter.TimeInterval = new TimeI" +
        "nterval(DateTime.Now, TimeSpan.FromDays(14));\r\n            //adapter.EnableSmart" +
        "Sync = true;\r\n\r\n            return adapter;\r\n        }\r\n    }\r\n}\r\n");

        
        #line default
        #line hidden
        
        #line 298 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"

    }

	void GenerateDesignerFile(SiteVisit sitevisit, IEnumerable<SiteVisitForm> forms)
	{
		string sitevisitName = sitevisit.SiteVisitName.Replace(" ", "");
		var parentForm = SiteVisitDBHelper.GetParentForm(sitevisit);
		string table = sitevisit.SiteVisitName.Replace(" ", "") + "_" + parentForm.DBTableName;
        string pkey = sitevisit.SiteVisitName.Replace(" ", "") + "_" + parentForm.DBPrimaryKeyName;

        
        #line default
        #line hidden
        
        #line 307 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write(@"//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated. 
// </auto-generated>
//------------------------------------------------------------------------------

namespace OnSite.WebUI.Reports {
    
    
    public partial class ");

        
        #line default
        #line hidden
        
        #line 320 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(sitevisitName));

        
        #line default
        #line hidden
        
        #line 320 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"
this.Write("Schedule {\r\n\r\n        /// <summary>\r\n        /// ASPxRoundPanel1 control.\r\n      " +
        "  /// </summary>\r\n        /// <remarks>\r\n        /// Auto-generated field.\r\n    " +
        "    /// To modify move field declaration from designer file to code-behind file." +
        "\r\n        /// </remarks>\r\n        protected global::DevExpress.Web.ASPxRoundPane" +
        "l.ASPxRoundPanel ASPxRoundPanel1;\r\n        \r\n        /// <summary>\r\n        /// " +
        "Panelcontent1 control.\r\n        /// </summary>\r\n        /// <remarks>\r\n        /" +
        "// Auto-generated field.\r\n        /// To modify move field declaration from desi" +
        "gner file to code-behind file.\r\n        /// </remarks>\r\n        protected global" +
        "::DevExpress.Web.ASPxPanel.PanelContent Panelcontent1;\r\n        \r\n        /// <s" +
        "ummary>\r\n        /// lblResourceCount control.\r\n        /// </summary>\r\n        " +
        "/// <remarks>\r\n        /// Auto-generated field.\r\n        /// To modify move fie" +
        "ld declaration from designer file to code-behind file.\r\n        /// </remarks>\r\n" +
        "        protected global::DevExpress.Web.ASPxEditors.ASPxLabel lblResourceCount;" +
        "\r\n        \r\n        /// <summary>\r\n        /// cbResourceCount control.\r\n       " +
        " /// </summary>\r\n        /// <remarks>\r\n        /// Auto-generated field.\r\n     " +
        "   /// To modify move field declaration from designer file to code-behind file.\r" +
        "\n        /// </remarks>\r\n        protected global::DevExpress.Web.ASPxEditors.AS" +
        "PxComboBox cbResourceCount;\r\n        \r\n        /// <summary>\r\n        /// lblSta" +
        "rt control.\r\n        /// </summary>\r\n        /// <remarks>\r\n        /// Auto-gen" +
        "erated field.\r\n        /// To modify move field declaration from designer file t" +
        "o code-behind file.\r\n        /// </remarks>\r\n        protected global::DevExpres" +
        "s.Web.ASPxEditors.ASPxLabel lblStart;\r\n        \r\n        /// <summary>\r\n        " +
        "/// edtStart control.\r\n        /// </summary>\r\n        /// <remarks>\r\n        //" +
        "/ Auto-generated field.\r\n        /// To modify move field declaration from desig" +
        "ner file to code-behind file.\r\n        /// </remarks>\r\n        protected global:" +
        ":DevExpress.Web.ASPxEditors.ASPxDateEdit edtStart;\r\n        \r\n        /// <summa" +
        "ry>\r\n        /// lblTimeScale control.\r\n        /// </summary>\r\n        /// <rem" +
        "arks>\r\n        /// Auto-generated field.\r\n        /// To modify move field decla" +
        "ration from designer file to code-behind file.\r\n        /// </remarks>\r\n        " +
        "protected global::DevExpress.Web.ASPxEditors.ASPxLabel lblTimeScale;\r\n        \r\n" +
        "        /// <summary>\r\n        /// cbTimeScale control.\r\n        /// </summary>\r" +
        "\n        /// <remarks>\r\n        /// Auto-generated field.\r\n        /// To modify" +
        " move field declaration from designer file to code-behind file.\r\n        /// </r" +
        "emarks>\r\n        protected global::DevExpress.Web.ASPxEditors.ASPxComboBox cbTim" +
        "eScale;\r\n        \r\n        /// <summary>\r\n        /// lblIntervalCount control.\r" +
        "\n        /// </summary>\r\n        /// <remarks>\r\n        /// Auto-generated field" +
        ".\r\n        /// To modify move field declaration from designer file to code-behin" +
        "d file.\r\n        /// </remarks>\r\n        protected global::DevExpress.Web.ASPxEd" +
        "itors.ASPxLabel lblIntervalCount;\r\n        \r\n        /// <summary>\r\n        /// " +
        "cbIntervalCount control.\r\n        /// </summary>\r\n        /// <remarks>\r\n       " +
        " /// Auto-generated field.\r\n        /// To modify move field declaration from de" +
        "signer file to code-behind file.\r\n        /// </remarks>\r\n        protected glob" +
        "al::DevExpress.Web.ASPxEditors.ASPxComboBox cbIntervalCount;\r\n        \r\n        " +
        "/// <summary>\r\n        /// lblEnd control.\r\n        /// </summary>\r\n        /// " +
        "<remarks>\r\n        /// Auto-generated field.\r\n        /// To modify move field d" +
        "eclaration from designer file to code-behind file.\r\n        /// </remarks>\r\n    " +
        "    protected global::DevExpress.Web.ASPxEditors.ASPxLabel lblEnd;\r\n        \r\n  " +
        "      /// <summary>\r\n        /// edtEnd control.\r\n        /// </summary>\r\n      " +
        "  /// <remarks>\r\n        /// Auto-generated field.\r\n        /// To modify move f" +
        "ield declaration from designer file to code-behind file.\r\n        /// </remarks>" +
        "\r\n        protected global::DevExpress.Web.ASPxEditors.ASPxDateEdit edtEnd;\r\n   " +
        "     \r\n        /// <summary>\r\n        /// ReportToolbar1 control.\r\n        /// <" +
        "/summary>\r\n        /// <remarks>\r\n        /// Auto-generated field.\r\n        ///" +
        " To modify move field declaration from designer file to code-behind file.\r\n     " +
        "   /// </remarks>\r\n        protected global::DevExpress.XtraReports.Web.ReportTo" +
        "olbar ReportToolbar1;\r\n        \r\n        /// <summary>\r\n        /// ReportViewer" +
        " control.\r\n        /// </summary>\r\n        /// <remarks>\r\n        /// Auto-gener" +
        "ated field.\r\n        /// To modify move field declaration from designer file to " +
        "code-behind file.\r\n        /// </remarks>\r\n        protected global::DevExpress." +
        "XtraReports.Web.ReportViewer ReportViewer;\r\n\t}\r\n}\r\n");

        
        #line default
        #line hidden
        
        #line 449 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\ReportScheduleTemplate.tt"

	}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "10.0.0.0")]
    public class ReportScheduleTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
