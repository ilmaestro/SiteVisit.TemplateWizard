// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 10.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace OnSite.TemplateWizard.Classes
{
    using System;
    using System.Data;
    using System.Data.Objects;
    using System.Linq;
    using System.IO;
    using System.Collections.Generic;
    using System.Data.Objects.DataClasses;
    using System.Text.RegularExpressions;
    using System.Xml;
    using System.Xml.Linq;
    using System.Text;
    using OnSite.TemplateWizard.Classes;
    using OnSite.TemplateWizard.Models;
    using System.Data.EntityClient;
    
    
    #line 1 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "10.0.0.0")]
    public partial class FormsJavascriptTemplate : FormsJavascriptTemplateBase
    {
        public virtual string TransformText()
        {
            
            #line 2 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"

switch (OutputType) {
	case FileType.CheckState:
		GenerateCheckState(Form);
		break;
	case FileType.OnChange:
		GenerateOnChange(Form);
		break;
	default:
		break;
}


            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        #line 14 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"

    void GenerateCheckState(SiteVisitForm form)
    {
		string siteVisitName = StringSanitizer.SanitizeForCode(form.SiteVisit.SiteVisitName);
		string pkeyTable = siteVisitName + "_" + form.DBTableName;
        string pkey = siteVisitName + "_" + form.DBPrimaryKeyName;
		string fkey = form.SiteVisitForm1 != null ? siteVisitName + "_" + form.SiteVisitForm1.DBPrimaryKeyName : string.Empty;
		string fkeyTable = form.SiteVisitForm1 != null ? siteVisitName + "_" + form.SiteVisitForm1.DBTableName : string.Empty;

        
        #line default
        #line hidden
        
        #line 22 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write("/** ");

        
        #line default
        #line hidden
        
        #line 23 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(pkeyTable));

        
        #line default
        #line hidden
        
        #line 23 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write(" CheckState Functions **/\r\nfunction Check");

        
        #line default
        #line hidden
        
        #line 24 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(pkeyTable));

        
        #line default
        #line hidden
        
        #line 24 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write("State() {\r\n\tif (typeof ");

        
        #line default
        #line hidden
        
        #line 25 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(pkeyTable));

        
        #line default
        #line hidden
        
        #line 25 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write("PanelControl == \'undefined\' || ");

        
        #line default
        #line hidden
        
        #line 25 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(pkeyTable));

        
        #line default
        #line hidden
        
        #line 25 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write("PanelControl == null)\r\n\t\treturn;\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 28 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(GenerateFieldValues(form.SiteVisitFormID)));

        
        #line default
        #line hidden
        
        #line 28 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write("\r\n}\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 31 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"

    }  

	private string GenerateFieldValues(int siteVisitFormID)
	{
		var fields = SiteVisitDBHelper.GetSiteVisitFormFields(siteVisitFormID, null, false);
		
		foreach(SiteVisitFormField field in fields) {
			string valueFunction = DevExpressHelper.GetValueExpression(field.ControlType.UITypeName);


        
        #line default
        #line hidden
        
        #line 41 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write("\tif (typeof uc");

        
        #line default
        #line hidden
        
        #line 42 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(field.FieldName));

        
        #line default
        #line hidden
        
        #line 42 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write(" == \'undefined\' || uc");

        
        #line default
        #line hidden
        
        #line 42 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(field.FieldName));

        
        #line default
        #line hidden
        
        #line 42 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write(" == null) {\r\n\t}\r\n\telse {\r\n\t\tvar ");

        
        #line default
        #line hidden
        
        #line 45 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(field.FieldName));

        
        #line default
        #line hidden
        
        #line 45 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write(" = uc");

        
        #line default
        #line hidden
        
        #line 45 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(field.FieldName));

        
        #line default
        #line hidden
        
        #line 45 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write(".");

        
        #line default
        #line hidden
        
        #line 45 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(valueFunction));

        
        #line default
        #line hidden
        
        #line 45 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write(";\r\n\t\tif (");

        
        #line default
        #line hidden
        
        #line 46 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(field.FieldName));

        
        #line default
        #line hidden
        
        #line 46 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write(" != null) {\r\n\t\t\tswitch (");

        
        #line default
        #line hidden
        
        #line 47 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(field.FieldName));

        
        #line default
        #line hidden
        
        #line 47 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write(") {\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n");

        
        #line default
        #line hidden
        
        #line 53 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
 
		}
		return "";
	}

	void GenerateOnChange(SiteVisitForm form)
    {
		string siteVisitName = StringSanitizer.SanitizeForCode(form.SiteVisit.SiteVisitName);
		string pkeyTable =siteVisitName + "_" + form.DBTableName;
        string pkey = siteVisitName + "_" + form.DBPrimaryKeyName;
		string fkey = form.SiteVisitForm1 != null ? siteVisitName + "_" + form.SiteVisitForm1.DBPrimaryKeyName : string.Empty;
		string fkeyTable = form.SiteVisitForm1 != null ? siteVisitName + "_" + form.SiteVisitForm1.DBTableName : string.Empty;

        
        #line default
        #line hidden
        
        #line 65 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write("/** ");

        
        #line default
        #line hidden
        
        #line 66 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(pkeyTable));

        
        #line default
        #line hidden
        
        #line 66 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write(" OnChange Functions **/\r\n");

        
        #line default
        #line hidden
        
        #line 67 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(GenerateFieldFunctions(form.SiteVisitFormID, pkeyTable)));

        
        #line default
        #line hidden
        
        #line 67 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write("\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 69 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"

    } 
	private string GenerateFieldFunctions(int siteVisitFormID, string pkeyTable)
	{
		var fields = SiteVisitDBHelper.GetSiteVisitFormFields(siteVisitFormID, null, false);
		
		foreach(SiteVisitFormField field in fields) {

        
        #line default
        #line hidden
        
        #line 76 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write("\t\r\nfunction On");

        
        #line default
        #line hidden
        
        #line 77 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(pkeyTable));

        
        #line default
        #line hidden
        
        #line 77 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write("Change_uc");

        
        #line default
        #line hidden
        
        #line 77 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(field.FieldName));

        
        #line default
        #line hidden
        
        #line 77 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write("() {\r\n\tCheck");

        
        #line default
        #line hidden
        
        #line 78 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(pkeyTable));

        
        #line default
        #line hidden
        
        #line 78 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
this.Write("State();\r\n}\r\n");

        
        #line default
        #line hidden
        
        #line 80 "C:\Apps\On-Site\Admin\OnSite.TemplateWizard\T4\FormsJavascriptTemplate.tt"
 
		}
		return "";
	}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "10.0.0.0")]
    public class FormsJavascriptTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
