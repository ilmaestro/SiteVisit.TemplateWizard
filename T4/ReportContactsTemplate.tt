<#@ include file="includes.txt" #>
<#
switch (OutputType) {
	case FileType.Page:
		GeneratePage(SiteVisit, SiteVisit.SiteVisitForms);
		break;
	case FileType.Code:
		GenerateCodeFile(SiteVisit, SiteVisit.SiteVisitForms);
		break;
	case FileType.Designer:
		GenerateDesignerFile(SiteVisit, SiteVisit.SiteVisitForms);
		break;
	default:
		break;
}
#><#+
    void GeneratePage(SiteVisit sitevisit, IEnumerable<SiteVisitForm> forms)
    {
		string sitevisitName = sitevisit.SiteVisitName.Replace(" ", "");
		var parentForm = SiteVisitDBHelper.GetParentForm(sitevisit);
		string table = sitevisit.SiteVisitName.Replace(" ", "") + "_" + parentForm.DBTableName;
        string pkey = sitevisit.SiteVisitName.Replace(" ", "") + "_" + parentForm.DBPrimaryKeyName;

		SiteVisitFormField reportViewerFilterField = SiteVisitDBHelper.GetSiteVisitReportViewerFilterField(parentForm);
		string reportViewerFilterExpression = "", whereParameters = "";
		if (reportViewerFilterField != null)
		{
			reportViewerFilterExpression = "it." + reportViewerFilterField.FieldName + " = @ReportViewerFilterValue OR @ReportViewerFilterValue IS NULL OR @ReportViewerFilterValue = ''";
			whereParameters = @"<WhereParameters>
            <asp:ProfileParameter Name=""ReportViewerFilterValue"" PropertyName=""ReportViewerFilterValue"" Type=""String"" />
        </WhereParameters>";
		}
#><%@ Page Title="<#= parentForm.UIDisplayName #> Search" Language="C#" MasterPageFile="~/Site.master" AutoEventWireup="true" CodeBehind="<#= sitevisitName #>Search.aspx.cs" Inherits="OnSite.WebUI.ClientCode.Reports.<#= sitevisitName #>Search" %>
<%@ Register Assembly="DevExpress.Web.ASPxGridView.v12.1.Export, Version=12.1.4.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a"
    Namespace="DevExpress.Web.ASPxGridView.Export" TagPrefix="dx" %>
<asp:Content ID="Content1" ContentPlaceHolderID="HeadContent" runat="server">
<script type="text/javascript">

</script>
</asp:Content>
<asp:Content ID="Content2" ContentPlaceHolderID="MainContent" runat="server">
	<h2>Contacts</h2>
	<table>
		<tr>
			<td>
				<dx:ASPxButton ID="btnCsvExport" runat="server" Text="Export to Csv" UseSubmitBehavior="False" />
			</td>
            <td>            
                <dx:ASPxButton ID="btnResetToDefault" AutoPostBack="false" runat="server" Text="Reset Columns">
                    <ClientSideEvents Click="function(s,e){ASPxClientUtils.DeleteCookie('<#= table #>ContactsReportCookie'); window.location = window.location;}" />
                </dx:ASPxButton>
            </td>
		</tr>
	</table>
    <dx:ASPxGridView ID="ASPxGridView1" runat="server" AutoGenerateColumns="False" 
		DataSourceID="<#= table #>DataSource" 
		KeyFieldName="<#= pkey #>"
		ClientInstanceName="grid">
        <Columns>
            <dx:GridViewCommandColumn VisibleIndex="0">
                <ClearFilterButton Visible="True">
                </ClearFilterButton>
            </dx:GridViewCommandColumn>
            <dx:GridViewDataTextColumn FieldName="<#= pkey #>" Caption="<#= pkey #>"
                ReadOnly="True" VisibleIndex="0" Visible="False">
			</dx:GridViewDataTextColumn>
			<dx:GridViewDataComboBoxColumn FieldName="DispositionID" Caption="Disposition" ReadOnly="True" VisibleIndex="0" Visible="true">
				<PropertiesComboBox DataSourceID="DispositionsDataSource" ValueField="DispositionID" IncrementalFilteringMode="StartsWith" TextField="DispositionName" ValueType="System.Int32" DropDownStyle="DropDown" />
			</dx:GridViewDataComboBoxColumn>
<#= GenerateGridViewColumns(parentForm) #>
<#= GenerateGridViewExportColumns(parentForm) #>
            <dx:GridViewDataTextColumn FieldName="LocationLatitude" 
                ReadOnly="True" VisibleIndex="0" Visible="False">
			</dx:GridViewDataTextColumn>
            <dx:GridViewDataTextColumn FieldName="LocationLongitude" 
                ReadOnly="True" VisibleIndex="0" Visible="False">
			</dx:GridViewDataTextColumn>
        </Columns>
        <Settings ShowFilterRow="True" ShowHeaderFilterButton="true" />
		<SettingsBehavior />
		<SettingsPager PageSizeItemSettings-Visible="true"></SettingsPager>
        <SettingsCookies CookiesID="<#= table #>ContactsReportCookie" Enabled="true" StoreColumnsVisiblePosition="true" StoreFiltering="false" StoreGroupingAndSorting="false" StorePaging="false" />
		<ClientSideEvents />
    </dx:ASPxGridView>
    <asp:EntityDataSource ID="<#= table #>DataSource" runat="server" 
        ConnectionString="name=SiteVisitDataEntities" 
        DefaultContainerName="SiteVisitDataEntities" EnableFlattening="False" 
        EntitySetName="<#= table #>" Where="<#= reportViewerFilterExpression #>">
        <#= whereParameters #>
    </asp:EntityDataSource>
	<asp:EntityDataSource ID="DispositionsDataSource" runat="server" 
		ConnectionString="name=SiteVisitDataEntities" DefaultContainerName="SiteVisitDataEntities" 
		EnableFlattening="False" EntitySetName="Dispositions">
	</asp:EntityDataSource> 
	<dx:ASPxGridViewExporter ID="gridExport" runat="server" GridViewID="ASPxGridView1">
    </dx:ASPxGridViewExporter>
</asp:Content>

<#+
    }  

	private string GenerateGridViewColumns(SiteVisitForm form)
	{
		foreach(SiteVisitFormField field in SiteVisitDBHelper.GetSiteVisitSearchableFields(form)) {
#>			<dx:GridViewDataTextColumn FieldName="<#= field.FieldName #>" Caption="<#= field.FieldLabel #>"
                ReadOnly="True" VisibleIndex="<#= field.FieldTabIndex #>">
            </dx:GridViewDataTextColumn>
<#+ 
		}
		return "";
	}

	private string GenerateGridViewExportColumns(SiteVisitForm form)
	{
		foreach(SiteVisitFormField field in SiteVisitDBHelper.GetSiteVisitExportFields(form)) {
			string output = "";
			//checkbox columns
			if (field.ControlType.ControlTypeID == 1)
			{
				foreach(SiteVisitFormFieldItem item in field.SiteVisitFormFieldItems)
				{
					output += "\t\t\t<dx:GridViewDataTextColumn FieldName=\""+ field.FieldName +"_"+item.ListItemValue +"\" Caption=\""+item.ListItemLabel+"\" ReadOnly=\"True\" VisibleIndex=\""+ field.FieldTabIndex +"\" Visible=\"False\">\r\n\t\t\t</dx:GridViewDataTextColumn>\r\n";
				}
			}
			else 
			{
				output = "<dx:GridViewDataTextColumn FieldName=\""+ field.FieldName +"\" ReadOnly=\"True\" VisibleIndex=\""+ field.FieldTabIndex +"\" Visible=\"False\">\r\n\t\t\t</dx:GridViewDataTextColumn>";
			}

#>			<#= output #>
<#+ 
		}
		return "";
	}

    void GenerateCodeFile(SiteVisit sitevisit, IEnumerable<SiteVisitForm> forms)
    {
		string sitevisitName = sitevisit.SiteVisitName.Replace(" ", "");
		var parentForm = SiteVisitDBHelper.GetParentForm(sitevisit);
		string table = sitevisit.SiteVisitName.Replace(" ", "") + "_" + parentForm.DBTableName;
        string pkey = sitevisit.SiteVisitName.Replace(" ", "") + "_" + parentForm.DBPrimaryKeyName;
#>

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using DevExpress.Web.ASPxClasses;
using OnSite.WebUI.ClientCode.Models;
using OnSite.WebUI.Models;

namespace OnSite.WebUI.ClientCode.Reports
{
    public partial class <#= sitevisitName #>Search : System.Web.UI.Page
    {
        SiteVisitDataEntities ctx = new SiteVisitDataEntities();

        protected void Page_Load(object sender, EventArgs e)
        {
			btnCsvExport.Click += new EventHandler(btnCsvExport_Click);
        }


        protected void btnCsvExport_Click(object sender, EventArgs e)
        {
			ASPxGridView1.Columns["<#= pkey #>"].Visible = true;
<#= GenerateExportColumns(parentForm) #>
			ASPxGridView1.DataBind();
			gridExport.FileName = "<#= table #>";
            gridExport.WriteCsvToResponse();
        }
    }
}
<#+
    }

	private string GenerateExportColumns(SiteVisitForm form)
	{

		foreach(SiteVisitFormField field in SiteVisitDBHelper.GetSiteVisitExportFields(form)) {
			string output = "";
			//checkbox columns
			if (field.ControlType.ControlTypeID == 1)
			{
				foreach(SiteVisitFormFieldItem item in field.SiteVisitFormFieldItems)
				{
					output += "ASPxGridView1.Columns[\""+ field.FieldName +"_"+item.ListItemValue +"\"].Visible = true;\r\n";
				}
			}
			else 
			{
				output = "ASPxGridView1.Columns[\""+ field.FieldName +"\"].Visible = true;";
			}
#>			<#= output #>
<#+ 
		}
		return "";
	}
	

	void GenerateDesignerFile(SiteVisit sitevisit, IEnumerable<SiteVisitForm> forms)
	{
		string sitevisitName = sitevisit.SiteVisitName.Replace(" ", "");
#>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated. 
// </auto-generated>
//------------------------------------------------------------------------------

namespace OnSite.WebUI.ClientCode.Reports {
    
    
    public partial class <#= sitevisitName #>Search {
        
		/// <summary>
        /// btnXLSExport control.
        /// </summary>
        /// <remarks>
        /// Auto-generated field.
        /// To modify move field declaration from designer file to code-behind file.
        /// </remarks>
        protected global::DevExpress.Web.ASPxEditors.ASPxButton btnCsvExport;

        /// <summary>
        /// ASPxGridView1 control.
        /// </summary>
        /// <remarks>
        /// Auto-generated field.
        /// To modify move field declaration from designer file to code-behind file.
        /// </remarks>
        protected global::DevExpress.Web.ASPxGridView.ASPxGridView ASPxGridView1;

		/// <summary>
        /// cbDisposition control.
        /// </summary>
        /// <remarks>
        /// Auto-generated field.
        /// To modify move field declaration from designer file to code-behind file.
        /// </remarks>
        protected global::DevExpress.Web.ASPxEditors.ASPxComboBox cbDisposition;

		/// <summary>
        /// DispositionsDataSource control.
        /// </summary>
        /// <remarks>
        /// Auto-generated field.
        /// To modify move field declaration from designer file to code-behind file.
        /// </remarks>
        protected global::System.Web.UI.WebControls.EntityDataSource DispositionsDataSource;
        
        /// <summary>
        /// gridExport control.
        /// </summary>
        /// <remarks>
        /// Auto-generated field.
        /// To modify move field declaration from designer file to code-behind file.
        /// </remarks>
        protected global::DevExpress.Web.ASPxGridView.Export.ASPxGridViewExporter gridExport;

	}
}
<#+
	}
#>